{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx-content-file-path-users-mhyeun-documents-fydp-group-29-github-io-content-pages-project-index-mdx-0f638042dc2220651cc0.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/page.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/page.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/pages/project/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/page-query.tsx"],"sourcesContent":["/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\n\nexport type MBPageProps = {\n  page: {\n    title: string\n    slug: string\n    excerpt: string\n  }\n}\n\nconst Page: React.FC<React.PropsWithChildren<PageProps<MBPageProps>>> = ({ data: { page }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {page.title}\n    </Heading>\n    <section sx={{ my: 5, variant: `layout.content` }}>{children}</section>\n  </Layout>\n)\n\nexport default Page\n\nexport const Head: HeadFC<MBPageProps> = ({ data: { page } }) => <Seo title={page.title} description={page.excerpt} />\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Page, { Head, MBPageProps } from \"../../../components/page\"\n\nexport default function MinimalBlogCorePage({ ...props }: PageProps<MBPageProps>) {\n  return <Page {...props} />\n}\n\nexport { Head }\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {Text} = _components;\n  if (!Text) _missingMdxReference(\"Text\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    children: `Proposed Solution`,\n    sx: {\n      fontSize: 4,\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Our product will be implemented on a lathe machine provided to us by the University of Waterloo.\"), \"\\n\", React.createElement(_components.p, null, \"Our product will use 3 IMU sensors, with each sensor on an axis of the 3-axis lathe machine.\\nEach sensor will be inserted into a custom 3D-printed housing. This housing allows easy removal of the sensor (for charging purposes), and creates a waterproof environment for the sensors.\"), \"\\n\", React.createElement(_components.p, null, \"During operation, each sensor will upload a datastream to a dedicated PC. This PC will format the data, and stream it to a cloud computer (Azure).\\nWith the cloud computer, our trained neural network will determine if an anomaly is detected. If one is detected, it will send a signal back to the PC to stop the operation.\\nThen, the PC will send a signal to a connected actuator which will stop the machine.\"), \"\\n\", React.createElement(Text, {\n    children: `Electrical Solution`,\n    sx: {\n      fontSize: 4,\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"The product will use 3 IMU sensors which will communicate to the PC via Bluetooth.\"), \"\\n\", React.createElement(_components.p, null, \"The PC will be connected to a generic wall socket. The PC will have a connection to a microcontroller via USB.\\nThe microcontroller will have a connection to a relay actuator, which will be used to stop the machine.\"), \"\\n\", React.createElement(Text, {\n    children: `Mechanical Solution`,\n    sx: {\n      fontSize: 4,\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"The product will have two housing parts:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"The platform\"), \"\\n\", React.createElement(_components.li, null, \"The housing\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"The platform will be a small 3D-printed piece that will be attached to each axis on the lathe machine with industrial double-sided tape.\"), \"\\n\", React.createElement(_components.p, null, \"The housing will be a 3D-printed piece that is attachable to the platform. The housing will protect the sensors from water, coolant, and dust. This will be made with plastic, to allow the Bluetooth signals to be broadcasted.\"), \"\\n\", React.createElement(Text, {\n    children: `Software Solution`,\n    sx: {\n      fontSize: 4,\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"This product will be using the MQTT IoT messaging protocol.\"), \"\\n\", React.createElement(Text, {\n    children: `Publishers, brokers, subscribers`,\n    sx: {\n      fontSize: 3,\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"The PC will act as the broker. Three queues will be created: one for unformatted data, one for formatted data, and one for operation status.\"), \"\\n\", React.createElement(_components.p, null, \"The sensors, which are publishers, will publish raw data to the unformatted data queue.\"), \"\\n\", React.createElement(_components.p, null, \"A script running on the PC will act as a subscriber for this queue, and consume this data. The script will then format the data and then act as a publisher to publish the formatted data to the formatted data queue.\"), \"\\n\", React.createElement(_components.p, null, \"This formatted data queue will be consumed by the cloud computer. After running the data through the neural network, the cloud computer will publish a continue/stop signal to the operation status queue.\"), \"\\n\", React.createElement(_components.p, null, \"The PC will consume this data, and the machine will be stopped via an actuator via a microcontroller.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/mhyeun/Documents/fydp-group-29.github.io/content/pages/project/index.mdx\";\nimport PageComponent, {Head} from \"../components/page\";\nPageComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"3297325238\";\n"],"names":["_ref","data","page","children","jsx","Layout","Heading","as","variant","title","sx","my","Head","_ref2","Seo","description","excerpt","MinimalBlogCorePage","props","React","Page","pathname","image","canonicalUrl","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","name","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","p","ol","li","_provideComponents","components","Text","id","component","Error","_missingMdxReference","fontSize","fontWeight","color","wrapper","MDXLayout","GatsbyMDXWrapper","PageComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}